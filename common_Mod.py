from gmpy import *
import sys

def xgcd(b, n):
    
    x0, x1, y0, y1 = 1, 0, 0, 1
    while n != 0:
        q, b, n = b // n, n, b % n
        x0, x1 = x1, x0 - q * x1
        y0, y1 = y1, y0 - q * y1
    return  b, x0, y0

def modn_atck(n,e1,e2,c1,c2):

	gcd ,d1 ,d2 = xgcd(e1,e2)

	print("d1: {}".format(d1))
	print("d2: {}".format(d2))

	if(gcd != 1):
	
		print("e1 and e2 are not coprime")
		sys.exit()

	else:

		if(d1<0):
			c1 = invert(c1,n)
			c1 = pow(c1,d1*(-1),n)

		else:
			c1 = pow(c1,d1,n)
	
		if(d2<0):
			c2 = invert(c2,n)
			c2 = pow(c2,d2*(-1),n)

		else:
			c2 = pow(c2,d2,n)

		Message = (c1*c2)%n

		return Message

if __name__ == '__main__':
	
	n  = 19085995833312192524007220630153244389942263922006889142154298425751808612835625879164268530070480609
	e1 = 31
	e2 = 71
	c1 = 6754157603566559210605055806173167464578011342930319568190139207096747909338872956835503565519657656
	c2 = 15442865769085690326152463737212582797117727243803209188030346754687972404658825954014788039636105165

	mesg = modn_atck(n,e1,e2,c1,c2)
	print("mesg {}".format(mesg))
	mesg = hex(mesg).lstrip("0x").decode('hex')

	print("Plaintext is: '{}'".format(mesg))
